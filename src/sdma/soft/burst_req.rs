#[doc = "Register `burst_req` reader"]
pub type R = crate::R<BurstReqSpec>;
#[doc = "Register `burst_req` writer"]
pub type W = crate::W<BurstReqSpec>;
#[doc = "Field `burst_req` reader - Software burst request."]
pub type BurstReqR = crate::FieldReader<u16>;
#[doc = "Field `burst_req` writer - Software burst request."]
pub type BurstReqW<'a, REG> = crate::FieldWriter<'a, REG, 16, u16>;
impl R {
    #[doc = "Bits 0:15 - Software burst request."]
    #[inline(always)]
    pub fn burst_req(&self) -> BurstReqR {
        BurstReqR::new((self.bits & 0xffff) as u16)
    }
}
impl W {
    #[doc = "Bits 0:15 - Software burst request."]
    #[inline(always)]
    #[must_use]
    pub fn burst_req(&mut self) -> BurstReqW<BurstReqSpec> {
        BurstReqW::new(self, 0)
    }
}
#[doc = "Software Burst Request Register - enables DMA burst requests to be generated by software. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting DMA burst transfers. You can generate a request from either a peripheral or the software request register.\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`burst_req::R`](R).  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`burst_req::W`](W). You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."]
pub struct BurstReqSpec;
impl crate::RegisterSpec for BurstReqSpec {
    type Ux = u32;
}
#[doc = "`read()` method returns [`burst_req::R`](R) reader structure"]
impl crate::Readable for BurstReqSpec {}
#[doc = "`write(|w| ..)` method takes [`burst_req::W`](W) writer structure"]
impl crate::Writable for BurstReqSpec {
    type Safety = crate::Unsafe;
    const ZERO_TO_MODIFY_FIELDS_BITMAP: u32 = 0;
    const ONE_TO_MODIFY_FIELDS_BITMAP: u32 = 0;
}
#[doc = "`reset()` method sets burst_req to value 0"]
impl crate::Resettable for BurstReqSpec {
    const RESET_VALUE: u32 = 0;
}
