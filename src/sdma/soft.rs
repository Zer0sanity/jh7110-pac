#[repr(C)]
#[doc = "DMAC Software registers"]
#[doc(alias = "soft")]
pub struct Soft {
    burst_req: BurstReq,
    single_req: SingleReq,
    last_burst_req: LastBurstReq,
    last_single_req: LastSingleReq,
}
impl Soft {
    #[doc = "0x00 - Software Burst Request Register - enables DMA burst requests to be generated by software. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting DMA burst transfers. You can generate a request from either a peripheral or the software request register."]
    #[inline(always)]
    pub const fn burst_req(&self) -> &BurstReq {
        &self.burst_req
    }
    #[doc = "0x04 - Software Single Request Register - enables DMA single requests to be generated by software. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting single DMA transfers. You can generate a request from either a peripheral or the software request register"]
    #[inline(always)]
    pub const fn single_req(&self) -> &SingleReq {
        &self.single_req
    }
    #[doc = "0x08 - Software Last Burst Request Register - enables software to generate DMA last burst requests. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting last burst DMA transfers. You can generate a request from either a peripheral or the software request register."]
    #[inline(always)]
    pub const fn last_burst_req(&self) -> &LastBurstReq {
        &self.last_burst_req
    }
    #[doc = "0x0c - Software Last Single Request Register - enables software to generate DMA last single requests. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting last single DMA transfers. You can generate a request from either a peripheral or the software request register."]
    #[inline(always)]
    pub const fn last_single_req(&self) -> &LastSingleReq {
        &self.last_single_req
    }
}
#[doc = "burst_req (rw) register accessor: Software Burst Request Register - enables DMA burst requests to be generated by software. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting DMA burst transfers. You can generate a request from either a peripheral or the software request register.\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`burst_req::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`burst_req::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@burst_req`]
module"]
#[doc(alias = "burst_req")]
pub type BurstReq = crate::Reg<burst_req::BurstReqSpec>;
#[doc = "Software Burst Request Register - enables DMA burst requests to be generated by software. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting DMA burst transfers. You can generate a request from either a peripheral or the software request register."]
pub mod burst_req;
#[doc = "single_req (rw) register accessor: Software Single Request Register - enables DMA single requests to be generated by software. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting single DMA transfers. You can generate a request from either a peripheral or the software request register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`single_req::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`single_req::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@single_req`]
module"]
#[doc(alias = "single_req")]
pub type SingleReq = crate::Reg<single_req::SingleReqSpec>;
#[doc = "Software Single Request Register - enables DMA single requests to be generated by software. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting single DMA transfers. You can generate a request from either a peripheral or the software request register"]
pub mod single_req;
#[doc = "last_burst_req (rw) register accessor: Software Last Burst Request Register - enables software to generate DMA last burst requests. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting last burst DMA transfers. You can generate a request from either a peripheral or the software request register.\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`last_burst_req::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`last_burst_req::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@last_burst_req`]
module"]
#[doc(alias = "last_burst_req")]
pub type LastBurstReq = crate::Reg<last_burst_req::LastBurstReqSpec>;
#[doc = "Software Last Burst Request Register - enables software to generate DMA last burst requests. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting last burst DMA transfers. You can generate a request from either a peripheral or the software request register."]
pub mod last_burst_req;
#[doc = "last_single_req (rw) register accessor: Software Last Single Request Register - enables software to generate DMA last single requests. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting last single DMA transfers. You can generate a request from either a peripheral or the software request register.\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`last_single_req::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`last_single_req::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@last_single_req`]
module"]
#[doc(alias = "last_single_req")]
pub type LastSingleReq = crate::Reg<last_single_req::LastSingleReqSpec>;
#[doc = "Software Last Single Request Register - enables software to generate DMA last single requests. You can generate a DMA request for each source by writing a 1 to the corresponding register bit. A register bit is cleared when the transaction has completed. Writing 0 to this register has no effect. Reading the register indicates the sources that are requesting last single DMA transfers. You can generate a request from either a peripheral or the software request register."]
pub mod last_single_req;
